{"version":3,"sources":["../../beezy-bookstore/src/logo.png","../../beezy-bookstore/src/components/SubmitButton.js","../../beezy-bookstore/src/components/AddBooks.js","../../beezy-bookstore/src/components/BookCard.js","../../beezy-bookstore/src/components/ShowBooks.js","../../beezy-bookstore/src/components/Menu.js","../../beezy-bookstore/src/components/UpdateBooksModal.js","../../beezy-bookstore/src/App.js","../../beezy-bookstore/src/index.js"],"names":["module","exports","__webpack_require__","p","submitButton","_this$props","this","props","action","id","react_default","a","createElement","react","className","type","onClick","Component","AddBooks","form","submitBook","getTitleValue","getAuthorValue","getGenreValue","getPriceValue","submitMessage","errorMessage","ref","htmlFor","onKeyUp","concat","SubmitButton","BookCard","title","author","genre","price","removeBook","updateBooksWindow","src","logo","alt","value","ShowBooks","filterBooks","getSearchGenre","getSearchName","loadingMessage","noResultsMessage","length","placeholder","map","book","index","components_BookCard","key","Menu","toggleSubmitMessage","NavLink","exact","to","activeClassName","UpdateBooksModal","show","children","booksList","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","formInfo","nameValue","genreValue","booksArray","bookToUpdate","isOpen","React","createRef","bind","assertThisInitialized","toggleModal","updateBook","refreshPage","reassignBooksArray","setTimeout","setState","e","_this$state","newFormInfo","objectSpread","currentTarget","updatedBook","_this$state2","_this$state3","_this$state4","preventDefault","push","current","reset","buttonValue","_i","parseInt","findIndex","x","_this$state5","Array","from","Set","find","filter","toUpperCase","includes","_i2","splice","_i3","window","location","reload","_this$state6","components_Menu","Switch","Route","path","render","components_ShowBooks","components_AddBooks","components_UpdateBooksModal","onClose","defaultValue","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ed185100.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3b5bbf27.png\";","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nclass submitButton extends Component {\n    render() {\n        const { action, id } = this.props;\n\n        return(\n            <Fragment>\n                <label className=\"send-books__label\"></label>\n                <input type=\"submit\" className=\"Send-books__button\" onClick={action} id={id}/>\n            </Fragment>\n        );\n    }\n}\n\nsubmitButton.propTypes = {\n    action: PropTypes.func, \n    id: PropTypes.number\n}\n\nexport default submitButton;\n\n\n\n","import React, { Component } from 'react';\nimport SubmitButton from './SubmitButton';\nimport PropTypes from 'prop-types';\n\nclass AddBooks extends Component {\n    render() {\n        const { form, submitBook, getTitleValue, getAuthorValue, getGenreValue, getPriceValue,  submitMessage, errorMessage } = this.props;\n\n        return(\n            <div className=\"Form__container\">\n                <form className=\"Add-books__form\" ref={form}>\n                    <label htmlFor=\"title\" className=\"Form__title-label\">Title </label>\n                    <input id=\"title\" className=\"Form__title-input\" type=\"text\" onKeyUp={getTitleValue}/> \n\n                    <label htmlFor=\"author\" className=\"Form__author-label\">Author </label>\n                    <input id=\"author\" className=\"Form__author-input\" type=\"text\" onKeyUp={getAuthorValue}/> \n\n                    <label htmlFor=\"genre\" className=\"Form__genre-label\">Genre </label>\n                    <input id=\"genre\" className=\"Form__genre-input\" type=\"text\" onKeyUp={getGenreValue}/> \n\n                    <label htmlFor=\"price\" className=\"Form__price-label\">Price </label>\n                    <input id=\"price\" className=\"Form__price-input\" type=\"text\" onKeyUp={getPriceValue}/> \n                </form>\n\n                <div className={`Error-message__container ${errorMessage}`}>\n                    <p className=\"Error-message\">*All fields are required</p>\n                </div>\n\n                <div className=\"Send-button__container\">\n                   <SubmitButton action={submitBook}/>\n                </div>\n\n                <div className={`S\u001dubmission-message__container ${submitMessage}`}>\n                    <p className=\"Submission-message\">The book was submitted successfully</p>\n                </div>\n            </div>\n        );   \n    }\n}\n\nAddBooks.propTypes = {\n    form: PropTypes.object,\n    submitBook: PropTypes.func,\n    getTitleValue: PropTypes.func,\n    getAuthorValue: PropTypes.func,\n    getGenreValue: PropTypes.func,\n    getPriceValue: PropTypes.func,\n    submitMessage: PropTypes.string,\n    errorMessage: PropTypes.string\n    }\n\nexport default AddBooks;","import React, { Component, Fragment } from 'react';\nimport logo from '../logo.png';\nimport PropTypes from 'prop-types';\n\nclass BookCard extends Component {\n    render() {\n        const { id, title, author, genre, price, removeBook, updateBooksWindow } = this.props;\n\n        return(\n            <Fragment>\n                <li className=\"Book__card\">\n                    <div className=\"Book-top__container\">\n                        <div className=\"Book__logo-container\">\n                            <img className=\"Book__logo\"  src={logo} alt=\"logo\"></img>\n                        </div>\n                        \n                        <div className=\"Action-buttons__container\">\n                            <button type=\"button\" className=\"Edit-button\" value={id} onClick={updateBooksWindow}><i className=\"fas fa-pen\"></i></button>\n                            <button type=\"button\" className=\"Delete-button\" value={id} onClick={removeBook}><i className=\"fas fa-trash-alt\"></i></button>\n                        </div>\n                    </div>\n\n                    <div className=\"Book__info\">\n                        <p className=\"Book__title\">{title}</p>\n                        <p className=\"Book__author\">{author}</p>\n                        <p className=\"Book__genre\">{genre}</p>\n                        <p className=\"Book__price\">{price}</p>\n                    </div>\n                </li>\n            </Fragment>\n        );   \n    }\n}\n\nBookCard.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string,\n    author: PropTypes.string,\n    genre: PropTypes.string,\n    price: PropTypes.string,\n    removeBook: PropTypes.func,\n    updateBooksWindow: PropTypes.func\n}\n\nexport default BookCard;\n\n\n\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport BookCard from './BookCard';\nimport PropTypes from 'prop-types';\n\nclass ShowBooks extends Component {\n    render() {\n        const { filterBooks, getSearchGenre, getSearchName, removeBook, updateBooksWindow, loadingMessage, noResultsMessage } = this.props;\n\n        if (filterBooks.length === 0 ) {\n            return (\n                <Fragment>\n                    <div className={`Search-fields__container ${noResultsMessage}`}>\n                        <label className=\"Genre__label\"></label>\n                        <input type=\"text\" className=\"Genre__field\" placeholder=\"Search books by genre\" onKeyUp={getSearchGenre}/>\n\n                        <label className=\"Title__label\"></label>\n                        <input type=\"text\" className=\"Title__field\" placeholder=\"Search books by title\" onKeyUp={getSearchName}/>\n                    </div>\n\n                    <div className=\"No-results-message__container\">\n                        <p className={`No-results-message ${noResultsMessage}`}>There are no results that match your search</p>\n                 \n                        <p className={`Loading-message ${loadingMessage}`}>Loading...</p>\n                    </div>\n                </Fragment>\n            )\n\n        } else {\n            return(\n                <Fragment>\n                    <div className=\"Search-fields__container\">\n                        <label className=\"Genre__label\"></label>\n                        <input type=\"text\" className=\"Genre__field\" placeholder=\"Search books by genre\" onKeyUp={getSearchGenre}/>\n\n                        <label className=\"Title__label\"></label>\n                        <input type=\"text\" className=\"Title__field\" placeholder=\"Search books by title\" onKeyUp={getSearchName}/>\n                    </div>\n\n                    <div className=\"Books__container\">\n                        {filterBooks.map((book, index)=>{\n                            book.id = index;\n                            return(\n                                <BookCard key={book.id} id={book.id}  title={book.title} author={book.author} genre={book.genre} price={book.price} removeBook={removeBook} updateBooksWindow={updateBooksWindow}/>\n                            )\n                        })}\n                    </div>\n                </Fragment>\n            );   \n        }\n    }\n}\n\nShowBooks.propTypes = {\n    filterBooks: PropTypes.array,\n    getSearchGenre: PropTypes.func,\n    getSearchName: PropTypes.func,\n    removeBook: PropTypes.func,\n    updateBooksWindow: PropTypes.func,\n}\n\nexport default ShowBooks;","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Menu extends Component {\n    render() {\n        const { toggleSubmitMessage } = this.props;\n\n        return(\n            <Fragment>\n                <NavLink exact to=\"/\" className=\"Show-books__link\" activeClassName=\"is-active\" onClick={toggleSubmitMessage}><p className=\"Show-books\">Show books</p>\n                </NavLink>\n    \n                <NavLink to=\"/AddBooks\" className=\"Add-books__link\" activeClassName=\"is-active\" onClick={toggleSubmitMessage}><p className=\"Add-books__title\">Add books</p></NavLink>\n            </Fragment>\n        ); \n    }\n}\n\nMenu.propTypes = {\n    toggleSubmitMessage: PropTypes.func\n}\n\nexport default Menu;\n\n","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass UpdateBooksModal extends Component {\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n    }\n\n    return (\n      <div className=\"Backdrop\">\n        <div className=\"Modal\">\n          {this.props.children} \n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateBooksModal.propTypes = {\n  children: PropTypes.node\n};\n\nexport default UpdateBooksModal;","import React, { Component, Fragment } from 'react';\nimport logo from './logo.png';\nimport './styles/App.scss';\nimport AddBooks from './components/AddBooks';\nimport ShowBooks from './components/ShowBooks';\nimport Menu from './components/Menu';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport UpdateBooksModal from './components/UpdateBooksModal';\nimport SubmitButton from './components/SubmitButton';\n\nlet booksList= [\n  {\n    title: 'El calor tan cercano',\n    author: 'Maruja Torres',\n    genre: 'autobiographical',\n    price: '16 €'\n  },\n  {\n    title: 'Un corazón helado',\n    author: 'Almudena Grandes',\n    genre: 'historical novel',\n    price: '18 €'\n  },\n  {\n    title: 'Il barone rampante',\n    author: 'Italo Calvino',\n    genre: 'fiction novel',\n    price: '20 €'\n  },\n  {\n    title: 'Γιατί σκότωσα την καλύτερη μου φίλη',\n    author: 'Aμάντα Mιχαλοπούλου',\n    genre: 'historical novel',\n    price: '25 €'\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      formInfo: {\n        title: '',\n        author: '',\n        genre: '',\n        price: ''\n      },\n      nameValue: '',\n      genreValue: '', \n      booksArray: [],\n      bookToUpdate: {},\n      isOpen: false,\n      submitMessage: 'Hidden',\n      errorMessage:'Hidden',\n      loadingMessage: 'Visible',\n      noResultsMessage: 'Hidden',\n    }\n\n    this.form = React.createRef();\n\n    this.getTitleValue = this.getTitleValue.bind(this);\n    this.getAuthorValue = this.getAuthorValue.bind(this);\n    this.getGenreValue = this.getGenreValue.bind(this);\n    this.getPriceValue = this.getPriceValue.bind(this);\n    this.submitBook = this.submitBook.bind(this);\n    this.getSearchName = this.getSearchName.bind(this);\n    this.getSearchGenre = this.getSearchGenre.bind(this);\n    this.filterBooks = this.filterBooks.bind(this);\n    this.removeBook = this.removeBook.bind(this);\n    this.updateBooksWindow = this.updateBooksWindow.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.updateBook = this.updateBook.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n    this.toggleSubmitMessage = this.toggleSubmitMessage.bind(this);\n    this.reassignBooksArray = this.reassignBooksArray.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(this.reassignBooksArray, 5000);\n  }\n\n  reassignBooksArray() {\n    if(booksList.length === 0) {\n      this.setState({booksArray: booksList, loadingMessage: 'Hidden', noResultsMessage: 'Hidden'})\n    } else {\n      this.setState({booksArray: booksList, loadingMessage: 'Hidden', noResultsMessage: 'Visible'})\n    }\n  }\n \n  getTitleValue(e) {\n    const { formInfo, bookToUpdate } = this.state;\n\n    const newFormInfo = { ...formInfo, title: e.currentTarget.value };\n    const updatedBook = { ...bookToUpdate, title: e.currentTarget.value };\n\n    this.setState({ formInfo: newFormInfo, bookToUpdate: updatedBook});\n  }\n\n  getAuthorValue(e) {\n    const { formInfo, bookToUpdate } = this.state;\n\n    const newFormInfo = { ...formInfo, author: e.currentTarget.value };\n    const updatedBook = { ...bookToUpdate, author: e.currentTarget.value };\n\n    this.setState({ formInfo: newFormInfo, bookToUpdate: updatedBook});\n  }\n\n  getGenreValue(e) {\n    const { formInfo, bookToUpdate } = this.state;\n\n    const newFormInfo = { ...formInfo, genre: e.currentTarget.value };\n    const updatedBook = { ...bookToUpdate, genre: e.currentTarget.value };\n\n    this.setState({ formInfo: newFormInfo, bookToUpdate: updatedBook });\n  }\n\n  getPriceValue(e) {\n    const { formInfo, bookToUpdate } = this.state;\n\n    const newFormInfo = { ...formInfo, price: e.currentTarget.value };\n    const updatedBook = { ...bookToUpdate, price: e.currentTarget.value };\n\n    this.setState({ formInfo: newFormInfo, bookToUpdate: updatedBook });\n  }\n\n  submitBook(e) {\n    e.preventDefault();\n\n    const { formInfo } = this.state;\n\n     if (formInfo.title !== '' && formInfo.author !== '' && formInfo.genre !== '' && formInfo.price !== ''  ) {\n\n        booksList.push(this.state.formInfo);\n    \n        this.setState({\n          formInfo: {\n            title: '',\n            author: '',\n            genre: '',\n            price: ''\n          }, \n          submitMessage: 'Visible',\n          errorMessage: 'Hidden',\n          booksArray: booksList\n        })\n          this.form.current.reset();\n\n        } else {\n          this.setState({\n            formInfo: {\n              title: '',\n              author: '',\n              genre: '',\n              price: ''\n            }, \n            errorMessage: 'Visible',\n            submitMessage: 'Hidden'\n          })\n          this.form.current.reset();\n        }\n    }\n\n  toggleSubmitMessage() {\n    this.setState({submitMessage: 'Hidden',  errorMessage: 'Hidden'});\n  }\n\n  updateBook(e) {\n    e.preventDefault();\n\n    const buttonValue = e.currentTarget.id;\n    const { bookToUpdate } = this.state;\n  \n    for (const book of booksList) {\n      if(parseInt(buttonValue) === book.id) {\n        const index = booksList.findIndex(x => x.id  === parseInt(buttonValue));\n\n        booksList[index] = bookToUpdate;\n      }\n    }\n    this.setState({booksArray: booksList})\n\n    this.toggleModal();\n  }\n\n  getSearchName(e) {\n    const nameValue = e.currentTarget.value;\n\n    this.setState({\n      nameValue: nameValue, \n    })\n  }\n\n  getSearchGenre(e) {\n    const genreValue = e.currentTarget.value;\n\n    this.setState({\n      genreValue: genreValue\n    })\n  }\n\n  filterBooks() {\n    const { genreValue, nameValue, booksArray} = this.state;\n\n    // It creates a new array. The new set map function allows unique values in it. Last map returns the actual book from the original booksList array.\n\n    const uniqueBooks = Array.from(new Set(booksArray.map(book => book.title)))\n      .map(title => {\n        return booksArray.find(book => book.title === title)\n      })\n\n      return uniqueBooks\n      .filter(book => book.genre.toUpperCase().includes(genreValue.toUpperCase()))\n      .filter(book => book.title.toUpperCase().includes(nameValue.toUpperCase()));\n  }\n\n  removeBook(e) {\n    const buttonValue = e.currentTarget.value;\n\n    for (const book of booksList) {\n      if(parseInt(buttonValue) === book.id) {\n        const index = booksList.findIndex(x => x.id  === parseInt(buttonValue));\n        booksList.splice(index, 1);\n      }\n    }\n    this.setState({booksArray: booksList})\n  }\n\n  updateBooksWindow(e) {\n    const buttonValue = e.currentTarget.value;\n\n    for (const book of booksList) {\n      if(parseInt(buttonValue) === book.id) {\n        const index = booksList.findIndex(x => x.id  === parseInt(buttonValue));\n        const book = booksList[index];\n \n        this.setState({bookToUpdate: book})\n      }\n    }\n    this.toggleModal();\n  }\n\n  toggleModal() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n  refreshPage(){ \n    window.location.reload(); \n  }\n  \n  render() {\n    const { getTitleValue, getAuthorValue, getGenreValue, getPriceValue, submitBook, getSearchName, getSearchGenre, filterBooks, removeBook, form, updateBooksWindow, updateBook, toggleSubmitMessage } = this;\n\n    const { bookToUpdate, submitMessage, errorMessage, loadingMessage, noResultsMessage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App__header\">\n          <div className=\"Header-content__container\">\n            <div className=\"Logo__container\">\n              <NavLink to=\"/\" className=\"Home-link\"><img className=\"Logo\"  src={logo} alt=\"logo\"></img></NavLink>\n              \n              <p className=\"App__name\">Beezy bookstore</p>\n            </div>\n\n            <div className=\"App__menu\">\n              <Menu toggleSubmitMessage={toggleSubmitMessage} />\n            </div>\n          </div>\n        </header>\n\n        <main className=\"App__main-section\">\n          <Switch>\n            <Fragment>\n              <Route exact path=\"/\" render={()=>(\n                <ShowBooks \n                getSearchName={getSearchName} \n                getSearchGenre={getSearchGenre}  filterBooks= {filterBooks()} removeBook={removeBook} updateBooksWindow={updateBooksWindow} loadingMessage={loadingMessage} noResultsMessage={noResultsMessage} \n                />\n              )}/>\n              \n              <Route path=\"/AddBooks\" render={()=>(<AddBooks getTitleValue={getTitleValue}getAuthorValue={getAuthorValue} getGenreValue={getGenreValue} getPriceValue={getPriceValue} submitBook={submitBook} form={form} submitMessage={submitMessage} errorMessage={errorMessage}/>)}/>\n            </Fragment>\n          </Switch>\n        </main>\n\n        <UpdateBooksModal show={this.state.isOpen} onClose={this.toggleModal}>\n          <div className=\"Form__container\">\n            <div className=\"Modal__close-button-container\">\n              <button className=\"Modal__close-button\" onClick={this.toggleModal}><i className=\"fas fa-times\"></i></button>\n            </div>\n\n            <form className=\"Add-books__form\">\n                <label htmlFor=\"title\" className=\"Form__title-label\">Title: </label>\n                <input id=\"title\" className=\"Form__title-input\" type=\"text\" onKeyUp={getTitleValue} defaultValue={bookToUpdate.title} title={bookToUpdate.title}/> \n\n                <label htmlFor=\"author\" className=\"Form__author-label\">Author: </label>\n                <input type=\"text\" id=\"author\" className=\"Form__author-input\" onKeyUp={getAuthorValue} defaultValue={bookToUpdate.author}/> \n\n                <label htmlFor=\"genre\" className=\"Form__genre-label\">Genre: </label>\n                <input id=\"genre\" className=\"Form__genre-input\" type=\"text\" onKeyUp={getGenreValue} defaultValue={bookToUpdate.genre}/> \n\n                <label htmlFor=\"price\" className=\"Form__price-label\">Price: </label>\n                <input id=\"price\" className=\"Form__price-input\" type=\"text\" onKeyUp={getPriceValue} defaultValue={bookToUpdate.price}/> \n            </form>\n\n            <div className=\"Send-button__container\">\n                <SubmitButton action={updateBook} id={bookToUpdate.id} />\n            </div>\n          </div>\n        </UpdateBooksModal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}